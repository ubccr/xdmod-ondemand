{
    "table_definition": [
        {
            "$ref": "${table_definition_dir}/ood/normalized.json#/table_definition"
        }
    ],
    "source_query": {
        "records": {
            "log_time_ts": "log_time_ts",
            "request_path": "s.request_path",
            "request_method": "s.request_method",
            "reverse_proxy_host": -1,
            "reverse_proxy_port": -1,
            "app": "'Unknown'",
            "user": "s.user",
            "city": "CASE WHEN s.city = '' THEN 'NA' ELSE s.city END",
            "state": "CASE WHEN s.state = '' THEN 'NA' ELSE s.state END",
            "country": "CASE WHEN s.country = '' THEN 'NA' ELSE s.country END",
            "ua_family": "s.ua_family",
            "ua_os_family": "s.ua_os_family"
        },
        "joins": [
            {
                "name": "staging",
                "schema": "${SOURCE_SCHEMA}",
                "alias": "s"
            }
        ],
        "#": "Only include lines that are from authenticated users and",
        "#": "are requests for interactive apps or reverse proxy servers,",
        "#": "and exclude requests for app icons, images, stylesheets,",
        "#": "scripts, datafiles, etc., unless they are being loaded from the",
        "#": "Files or File Editor apps.",
        "where": [
            "s.user != '-'",
            "s.request_path != '/pun/sys/'",
            "s.request_path REGEXP '^/(pun|r?node)/.+'",
            "s.request_path NOT LIKE '/pun/sys/dashboard/apps/icon/%'",
            "(s.request_path NOT REGEXP '\\\\.(aff|css|dic|gif|ico|jpg|js|json|map|mp3|oga|ogg|otf|png|rstheme|svg|ttf|wasm|woff|woff2)(\\\\?.*)?$' OR s.request_path REGEXP '^/pun/sys/dashboard/files/(api/[^/]+/)?(edit|fs)/.+' OR s.request_path LIKE '/pun/sys/files/fs/%' OR s.request_path LIKE '/pun/sys/file-editor/edit/%')"
        ]
    },
    "destination_record_map": {
        "normalized": {
            "log_time_ts": "log_time_ts",
            "user": "user",
            "request_path": "request_path",
            "request_method": "request_method",
            "reverse_proxy_host": "reverse_proxy_host",
            "reverse_proxy_port": "reverse_proxy_port",
            "app": "app",
            "city": "city",
            "state": "state",
            "country": "country",
            "ua_family": "ua_family",
            "ua_os_family": "ua_os_family"
        }
    }
}
